@startuml

package UserService {
  class User {
    - id: String
    - username: String
    - authorName: String
    - password: String
    - role: String
    - mainAccount: String = username
  }
}

note top of UserService
  Responsible for creating new account, giving tokens and validating tokens
end note


package QuoteService {
  class Author {
    - id: String
    - firstName: String
    - lastName: String
    - abreviation: String
    - String getAuthorName() = lastName + firstName
  }

  class Media {
    - id: String
    - mediaName: String
    - authorName: String
    - publisher?: String = null
    - dateOfPublication: Date
    - typeOfMedia: TypeOfMedia
    - link?: String = null
  }

  enum TypeOfMedia {
    book
    article
    blogPost
    movie
    webVideo
  }

  class Quote {
    - id: String
    - authorName: String
    - mediaName: String
    - where: String
    - content: String
  }

  note top of Quote
    The value of where can be page numbers or a time spectrum
  end note

  TypeOfMedia -> Media::typeOfMedia
  Author::getAuthorName -> Media::authorName
  Author::getAuthorName -> Quote::authorName
  Media::mediaName -> Quote::mediaName
}

package PostsService {
  class Post {
    - id: String
    - authorName: String
    - authorUserName: String
    - mainAccount: String
    - date: Date
    - title: String
    - content: String
  }

  class Image {
    - id: String
    - imageName: String
    - image: String
  }

  note left of Image
    In <b>base64</b>
  end note

  User::username -> Post::authorUserName
  User::authorName -> Post::authorName
  User::mainAccount -> Post::mainAccount
  Image::image --> Post::content
  Quote::content -> Post::content
}

package TodoService {
  class Todo {
    - id: String
    - postId: String
    - todoTitle: String
    - todoDescription: String
    - date: Date
    - status: todoStatus = naoIniciado
  }

  enum todoStatus {
    naoIniciado
    emProgresso
    completo
  }

  Post::id -> Todo::postId
  todoStatus -> Todo::status
}

@enduml
